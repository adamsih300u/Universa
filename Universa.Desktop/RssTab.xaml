<UserControl x:Class="Universa.Desktop.RssTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Universa.Desktop"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <local:BoolToFontWeightConverter x:Key="BoolToFontWeightConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="250" MinWidth="200"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Left sidebar with feeds -->
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Toolbar -->
                <ToolBar Grid.Row="0" Background="{DynamicResource WindowBackgroundBrush}" BorderBrush="{DynamicResource BorderBrush}">
                    <Button x:Name="RefreshButton" ToolTip="Refresh Feeds" Click="RefreshButton_Click" Background="Transparent">
                        <TextBlock Text="ðŸ”„" Foreground="{DynamicResource TextBrush}"/>
                    </Button>
                    <Button x:Name="MarkAllReadButton" ToolTip="Mark All as Read" Click="MarkAllReadButton_Click" Background="Transparent">
                        <TextBlock Text="âœ“" Foreground="{DynamicResource TextBrush}"/>
                    </Button>
                    <Separator Background="{DynamicResource BorderBrush}"/>
                    <ToggleButton x:Name="ViewModeButton" ToolTip="Toggle Reading Mode" Click="ViewModeButton_Click" Background="Transparent">
                        <TextBlock Text="ðŸ“–" Foreground="{DynamicResource TextBrush}"/>
                    </ToggleButton>
                </ToolBar>

                <!-- Feed list -->
                <TreeView x:Name="FeedTreeView" Grid.Row="1" 
                         Background="{DynamicResource WindowBackgroundBrush}"
                         Foreground="{DynamicResource TextBrush}"
                         BorderBrush="{DynamicResource BorderBrush}"
                         SelectedItemChanged="FeedTreeView_SelectedItemChanged">
                    <TreeView.Resources>
                        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
                            <Setter Property="Focusable" Value="False"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ToggleButton">
                                        <Border Width="19" Height="13" Background="Transparent">
                                            <Path x:Name="ExpandPath" Stroke="{DynamicResource TextBrush}" Fill="{DynamicResource TextBrush}"
                                                  Data="M 4 0 L 8 4 L 4 8 Z">
                                                <Path.RenderTransform>
                                                    <RotateTransform x:Name="Transform" Angle="0" CenterX="4" CenterY="4"/>
                                                </Path.RenderTransform>
                                            </Path>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsChecked" Value="True">
                                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                                    <Setter.Value>
                                                        <RotateTransform Angle="90" CenterX="4" CenterY="4"/>
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>

                        <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
                            <Setter Property="Padding" Value="5,2"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition MinWidth="19" Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <!-- Expander -->
                                            <ToggleButton x:Name="Expander" 
                                                        Style="{StaticResource ExpandCollapseToggleStyle}" 
                                                        IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                                        ClickMode="Press"/>
                                            <!-- Header -->
                                            <Border x:Name="Bd" 
                                                    Grid.Column="1" 
                                                    Background="{TemplateBinding Background}"
                                                    BorderBrush="{TemplateBinding BorderBrush}"
                                                    BorderThickness="{TemplateBinding BorderThickness}"
                                                    Padding="{TemplateBinding Padding}">
                                                <ContentPresenter x:Name="PART_Header" 
                                                                ContentSource="Header"
                                                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
                                            </Border>
                                            <!-- Items -->
                                            <ItemsPresenter x:Name="ItemsHost" 
                                                          Grid.Row="1" 
                                                          Grid.Column="1"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsExpanded" Value="false">
                                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                                            </Trigger>
                                            <Trigger Property="HasItems" Value="false">
                                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true"/>
                                                    <Condition Property="IsKeyboardFocusWithin" Value="true"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ListItemSelectedBackgroundBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource HighlightTextBrush}"/>
                                            </MultiTrigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="true"/>
                                                    <Condition Property="IsKeyboardFocusWithin" Value="false"/>
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ListItemSelectedInactiveBackgroundBrush}"/>
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                            </MultiTrigger>
                                            <Trigger Property="IsMouseOver" Value="true">
                                                <Setter Property="Background" TargetName="Bd" Value="{DynamicResource ListItemHoverBackgroundBrush}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem" BasedOn="{StaticResource TreeViewItemStyle}"/>
                    </TreeView.ItemContainerStyle>
                </TreeView>
            </Grid>

            <!-- Splitter -->
            <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch"/>

            <!-- Article list and content -->
            <Grid Grid.Column="2" x:Name="ContentGrid">
                <!-- Default View -->
                <Grid x:Name="DefaultView">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="5"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Article list -->
                    <ListView Name="ArticleListView" Grid.Row="0"
                             Background="{DynamicResource WindowBackgroundBrush}"
                             Foreground="{DynamicResource TextBrush}"
                             BorderBrush="{DynamicResource BorderBrush}"
                             SelectionChanged="ArticleListView_SelectionChanged">
                        <ListView.Resources>
                            <Style TargetType="ListViewItem">
                                <Setter Property="Background" Value="Transparent"/>
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Style.Triggers>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsKeyboardFocusWithin" Value="True"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource ListItemSelectedBackgroundBrush}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource HighlightTextBrush}"/>
                                    </MultiTrigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected" Value="True"/>
                                            <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                                        </MultiTrigger.Conditions>
                                        <Setter Property="Background" Value="{DynamicResource ListItemSelectedInactiveBackgroundBrush}"/>
                                        <Setter Property="Foreground" Value="{DynamicResource InactiveSelectionTextBrush}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource ListItemHoverBackgroundBrush}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.Resources>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Title" Width="400">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Title}" 
                                                       FontWeight="{Binding Article.IsRead, Converter={StaticResource BoolToFontWeightConverter}}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Date" DisplayMemberBinding="{Binding Date}" Width="150"/>
                                <GridViewColumn Header="Feed" DisplayMemberBinding="{Binding Feed}" Width="200"/>
                            </GridView>
                        </ListView.View>
                    </ListView>

                    <!-- Splitter -->
                    <GridSplitter Grid.Row="1" Height="5" HorizontalAlignment="Stretch"/>

                    <!-- Article content -->
                    <WebBrowser x:Name="ContentBrowser" Grid.Row="2" Margin="0,0,0,80" Focusable="False"/>
                </Grid>

                <!-- Reading View -->
                <ScrollViewer x:Name="ReadingView" Visibility="Collapsed" 
                             ScrollChanged="ReadingView_ScrollChanged"
                             Background="{DynamicResource BackgroundBrush}"
                             Foreground="{DynamicResource TextBrush}"
                             BorderBrush="{DynamicResource BorderBrush}"
                             VerticalScrollBarVisibility="Auto"
                             HorizontalScrollBarVisibility="Disabled"
                             Padding="0,0,0,80">
                    <StackPanel x:Name="ArticlesPanel" Margin="20,20,20,0"/>
                </ScrollViewer>
            </Grid>
        </Grid>
    </Grid>
</UserControl> 