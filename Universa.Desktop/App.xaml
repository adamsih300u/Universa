<Application x:Class="Universa.Desktop.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:Universa.Desktop"
             xmlns:models="clr-namespace:Universa.Desktop.Models"
             xmlns:views="clr-namespace:Universa.Desktop.Views"
             xmlns:converters="clr-namespace:Universa.Desktop.Converters">
    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="Themes/Default.xaml"/>
                <ResourceDictionary Source="Themes/Dark.xaml"/>
                <ResourceDictionary Source="Styles/ProgressBarStyles.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <!-- Font Registration -->
            <FontFamily x:Key="CascadiaMono">pack://application:,,,/Universa.Desktop;component/Fonts/CascadiaMono.ttf#Cascadia Mono</FontFamily>

            <!-- Converters -->
            <converters:TimeSpanToStringConverter x:Key="TimeSpanToStringConverter"/>
            <converters:MessageBackgroundConverter x:Key="MessageBackgroundConverter"/>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
            <converters:IsCurrentTTSTabConverter x:Key="IsCurrentTTSTabConverter"/>
            <converters:MessageAlignmentConverter x:Key="MessageAlignmentConverter"/>
            <converters:VerificationStatusConverter x:Key="VerificationStatusConverter"/>
            <converters:StringToVisibilityConverter x:Key="StringToVisibilityConverter"/>
            <converters:PriceChangeColorConverter x:Key="PriceChangeColorConverter"/>

            <!-- Stock Market Colors -->
            <Color x:Key="PositiveChangeColor">#4CAF50</Color>
            <Color x:Key="NegativeChangeColor">#F44336</Color>
            <Color x:Key="NeutralChangeColor">#9E9E9E</Color>
            
            <!-- Stock Market Brushes -->
            <SolidColorBrush x:Key="PositiveChangeBrush" Color="#4CAF50"/>
            <SolidColorBrush x:Key="NegativeChangeBrush" Color="#F44336"/>
            <SolidColorBrush x:Key="NeutralChangeBrush" Color="{StaticResource NeutralChangeColor}"/>

            <!-- Default Styles -->
            <Style x:Key="BaseTextStyle">
                <Setter Property="TextElement.FontFamily" Value="{StaticResource CascadiaMono}" />
            </Style>

            <Style TargetType="Window" BasedOn="{StaticResource BaseTextStyle}">
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource CascadiaMono}"/>
            </Style>

            <Style TargetType="UserControl" BasedOn="{StaticResource BaseTextStyle}">
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource CascadiaMono}"/>
            </Style>

            <Style TargetType="TextBox" BasedOn="{StaticResource BaseTextStyle}">
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="CaretBrush" Value="{DynamicResource TextBrush}"/>
                <Setter Property="SelectionTextBrush" Value="{DynamicResource TextBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource CascadiaMono}"/>
                <Setter Property="AllowDrop" Value="True"/>
                <Setter Property="IsUndoEnabled" Value="True"/>
                <Setter Property="IsInactiveSelectionHighlightEnabled" Value="True"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="SelectionBrush">
                    <Setter.Value>
                        <SolidColorBrush Color="#FFEB64" Opacity="0.3"/>
                    </Setter.Value>
                </Setter>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border" 
                                    Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    SnapsToDevicePixels="True">
                                <ScrollViewer x:Name="PART_ContentHost" 
                                            Focusable="False"
                                            Background="Transparent"
                                            IsHitTestVisible="True"
                                            HorizontalScrollBarVisibility="{TemplateBinding HorizontalScrollBarVisibility}"
                                            VerticalScrollBarVisibility="{TemplateBinding VerticalScrollBarVisibility}">
                                    <ScrollViewer.Style>
                                        <Style TargetType="ScrollViewer">
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Cursor" Value="IBeam"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ScrollViewer.Style>
                                </ScrollViewer>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderBrush}"/>
                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource BorderBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Cursor" Value="IBeam"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="TextBlock" BasedOn="{StaticResource BaseTextStyle}">
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource CascadiaMono}"/>
            </Style>

            <Style TargetType="TreeView" BasedOn="{StaticResource BaseTextStyle}">
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource CascadiaMono}"/>
            </Style>

            <Style TargetType="TreeViewItem" BasedOn="{StaticResource BaseTextStyle}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource CascadiaMono}"/>
            </Style>

            <Style TargetType="ListBox" BasedOn="{StaticResource BaseTextStyle}">
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource CascadiaMono}"/>
            </Style>

            <Style TargetType="ListBoxItem" BasedOn="{StaticResource BaseTextStyle}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource CascadiaMono}"/>
            </Style>

            <!-- ComboBox Template -->
            <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Border x:Name="Border" 
                        Background="{DynamicResource ControlBackgroundBrush}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="1">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="20"/>
                        </Grid.ColumnDefinitions>
                        <Path x:Name="Arrow"
                              Grid.Column="1"
                              Fill="{DynamicResource TextBrush}"
                              HorizontalAlignment="Center"
                              VerticalAlignment="Center"
                              Data="M 0 0 L 4 4 L 8 0 Z"/>
                    </Grid>
                </Border>
            </ControlTemplate>

            <Style TargetType="ComboBox" BasedOn="{StaticResource BaseTextStyle}">
                <Setter Property="Background" Value="{DynamicResource ControlBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource CascadiaMono}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ComboBox">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="20"/>
                                </Grid.ColumnDefinitions>
                                <ContentPresenter Name="ContentSite"
                                                Grid.Column="0"
                                                IsHitTestVisible="False"
                                                Content="{TemplateBinding SelectionBoxItem}"
                                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                Margin="3,3,3,3"
                                                VerticalAlignment="Center"/>
                                <ToggleButton Name="ToggleButton"
                                            Grid.Column="1"
                                            Template="{StaticResource ComboBoxToggleButton}"
                                            Focusable="false"
                                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                            ClickMode="Press">
                                </ToggleButton>
                                <Popup Name="Popup"
                                       Placement="Bottom"
                                       IsOpen="{TemplateBinding IsDropDownOpen}"
                                       AllowsTransparency="True" 
                                       Focusable="False"
                                       PopupAnimation="Slide">
                                    <Grid Name="DropDown"
                                          SnapsToDevicePixels="True"                
                                          MinWidth="{TemplateBinding ActualWidth}"
                                          MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                        <Border x:Name="DropDownBorder"
                                                Background="{DynamicResource ControlBackgroundBrush}"
                                                BorderThickness="1"
                                                BorderBrush="{DynamicResource BorderBrush}"/>
                                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                            <StackPanel IsItemsHost="True" 
                                                      KeyboardNavigation.DirectionalNavigation="Contained" />
                                        </ScrollViewer>
                                    </Grid>
                                </Popup>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ComboBoxItem" BasedOn="{StaticResource BaseTextStyle}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource CascadiaMono}"/>
                <Setter Property="HorizontalContentAlignment" Value="Left"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource HighlightBrush}"/>
                    </Trigger>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource SelectedBackgroundBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Menu" BasedOn="{StaticResource BaseTextStyle}">
                <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MenuForeground}"/>
                <Setter Property="FontFamily" Value="{StaticResource CascadiaMono}"/>
            </Style>

            <Style TargetType="MenuItem" BasedOn="{StaticResource BaseTextStyle}">
                <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource MenuForeground}"/>
                <Setter Property="FontFamily" Value="{StaticResource CascadiaMono}"/>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource HighlightBrush}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="StatusBar" BasedOn="{StaticResource BaseTextStyle}">
                <Setter Property="Background" Value="{DynamicResource MenuBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource CascadiaMono}"/>
            </Style>

            <Style TargetType="TabControl" BasedOn="{StaticResource BaseTextStyle}">
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="FontFamily" Value="{StaticResource CascadiaMono}"/>
            </Style>

            <Style TargetType="TabItem">
                <Setter Property="Background" Value="{DynamicResource TabBackground}"/>
                <Setter Property="Foreground" Value="{DynamicResource TabForeground}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="Margin" Value="0,0,2,0"/>
                <Setter Property="Padding" Value="10,5"/>
                <Setter Property="FontFamily" Value="{StaticResource CascadiaMono}"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TabItem">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="*"/>
                                </Grid.RowDefinitions>
                                <Border x:Name="HeaderBorder"
                                        Grid.Row="0"
                                        BorderBrush="{TemplateBinding BorderBrush}"
                                        BorderThickness="{TemplateBinding BorderThickness}"
                                        Background="{TemplateBinding Background}"
                                        Margin="{TemplateBinding Margin}"
                                        Padding="{TemplateBinding Padding}">
                                    <ContentPresenter x:Name="HeaderContent"
                                                    ContentSource="Header"
                                                    RecognizesAccessKey="True"/>
                                </Border>
                                <Border Grid.Row="1" 
                                        Background="Transparent" 
                                        IsHitTestVisible="True">
                                    <ContentPresenter x:Name="PART_Content"
                                                    ContentSource="Content"/>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource SelectedTabBackgroundBrush}"/>
                                    <Setter TargetName="HeaderBorder" Property="BorderThickness" Value="1,1,1,0"/>
                                    <Setter Property="Panel.ZIndex" Value="1"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                        <Condition Property="IsSelected" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="HeaderBorder" Property="Background" Value="{DynamicResource ListItemHoverBackgroundBrush}"/>
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="MainWindowTabItemStyle" TargetType="TabItem" BasedOn="{StaticResource {x:Type TabItem}}">
                <Setter Property="HeaderTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <DockPanel LastChildFill="True" Background="Transparent">
                                <Button DockPanel.Dock="Right" 
                                        Content="✕"
                                        Command="{Binding RelativeSource={RelativeSource AncestorType=views:MainWindow}, Path=CloseTabCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=TabItem}}"
                                        Margin="5,0,0,0"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Foreground="{DynamicResource TextBrush}"/>
                                <Button x:Name="TTSButton"
                                        DockPanel.Dock="Left"
                                        Content="🔊"
                                        Width="24"
                                        Height="24"
                                        Margin="0,0,5,0"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Foreground="{DynamicResource TextBrush}"
                                        Visibility="{Binding Source={x:Static models:Configuration.Instance}, Path=EnableTTS, Converter={StaticResource BooleanToVisibilityConverter}}"
                                        Command="{Binding RelativeSource={RelativeSource AncestorType=views:MainWindow}, Path=ToggleTTSCommand}"
                                        CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=TabItem}}"/>
                                <TextBlock Text="{Binding}"
                                           Foreground="{DynamicResource TextBrush}"/>
                            </DockPanel>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Circular Progress Bar Style -->
            <Style x:Key="CircularProgressBar" TargetType="ProgressBar">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ProgressBar">
                            <Grid x:Name="TemplateRoot" SnapsToDevicePixels="true">
                                <Grid.Resources>
                                    <Style TargetType="Ellipse">
                                        <Setter Property="Stroke" Value="{DynamicResource AccentBrush}"/>
                                        <Setter Property="StrokeThickness" Value="4"/>
                                    </Style>
                                </Grid.Resources>
                                <Viewbox>
                                    <Grid Width="50" Height="50">
                                        <Ellipse x:Name="PathRoot" Opacity="0.3"/>
                                        <Ellipse x:Name="PathFill">
                                            <Ellipse.RenderTransform>
                                                <RotateTransform/>
                                            </Ellipse.RenderTransform>
                                            <Ellipse.Triggers>
                                                <EventTrigger RoutedEvent="Loaded">
                                                    <BeginStoryboard>
                                                        <Storyboard>
                                                            <DoubleAnimation
                                                                Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                                                From="0"
                                                                To="360"
                                                                Duration="0:0:2"
                                                                RepeatBehavior="Forever"/>
                                                        </Storyboard>
                                                    </BeginStoryboard>
                                                </EventTrigger>
                                            </Ellipse.Triggers>
                                        </Ellipse>
                                    </Grid>
                                </Viewbox>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!-- Chat Sidebar Styles -->
            <Style x:Key="ChatSidebarComboBoxStyle" TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                <Setter Property="Width" Value="200"/>
                <Setter Property="HorizontalAlignment" Value="Center"/>
                <Setter Property="Margin" Value="24,5,5,5"/>
            </Style>
            
            <Style x:Key="ChatSidebarTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
                <Setter Property="Margin" Value="5"/>
                <Setter Property="AcceptsReturn" Value="True"/>
                <Setter Property="TextWrapping" Value="Wrap"/>
                <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            </Style>

            <!-- Value Converters -->
            <converters:InverseBooleanToVisibilityConverter x:Key="InverseBoolToVisibilityConverter"/>

            <Style x:Key="SearchBoxStyle" TargetType="TextBox">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="TextBox">
                            <Border Background="{TemplateBinding Background}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="4">
                                <Grid>
                                    <TextBox x:Name="PART_TextBox"
                                             Text="{Binding Path=Text, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                             Background="Transparent"
                                             BorderThickness="0"
                                             Padding="25,5,5,5"
                                             VerticalContentAlignment="Center"/>
                                    <TextBlock IsHitTestVisible="False"
                                             Text="Search rooms..."
                                             Foreground="Gray"
                                             Margin="25,0,0,0"
                                             VerticalAlignment="Center"
                                             HorizontalAlignment="Left">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Text, ElementName=PART_TextBox}" Value="">
                                                        <Setter Property="Visibility" Value="Visible"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                    <Path Data="M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"
                                          Fill="Gray"
                                          Width="16"
                                          Height="16"
                                          Stretch="Uniform"
                                          HorizontalAlignment="Left"
                                          Margin="5,0,0,0"/>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="GridSplitter">
                <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
            </Style>

            <Style TargetType="Grid">
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
            </Style>

            <Style TargetType="DockPanel">
                <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application> 