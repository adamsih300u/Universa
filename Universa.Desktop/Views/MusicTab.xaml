<?xml version="1.0" encoding="utf-8"?>
<UserControl x:Class="Universa.Desktop.Views.MusicTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Universa.Desktop.Views"
             xmlns:models="clr-namespace:Universa.Desktop.Models"
             xmlns:viewModels="clr-namespace:Universa.Desktop.Views"
             xmlns:converters="clr-namespace:Universa.Desktop.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:BooleanToVisibilityConverter x:Key="BoolToVisConverter"/>
        
        <Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Width" Value="16"/>
            <Setter Property="Height" Value="16"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Border Width="16" Height="16" Background="Transparent">
                            <Path x:Name="ExpandPath" Fill="{DynamicResource TextBrush}" Stroke="{DynamicResource TextBrush}" 
                                  Margin="1,1,1,1">
                                <Path.Data>
                                    <PathGeometry>
                                        <PathGeometry.Figures>
                                            <PathFigureCollection>
                                                <PathFigure StartPoint="0,0" IsClosed="True">
                                                    <PathFigure.Segments>
                                                        <PathSegmentCollection>
                                                            <LineSegment Point="0,6"/>
                                                            <LineSegment Point="6,3"/>
                                                        </PathSegmentCollection>
                                                    </PathFigure.Segments>
                                                </PathFigure>
                                            </PathFigureCollection>
                                        </PathGeometry.Figures>
                                    </PathGeometry>
                                </Path.Data>
                                <Path.RenderTransform>
                                    <RotateTransform Angle="0" CenterX="3" CenterY="3"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="ExpandPath" Value="{DynamicResource AccentBrush}"/>
                                <Setter Property="Fill" TargetName="ExpandPath" Value="{DynamicResource AccentBrush}"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter Property="RenderTransform" TargetName="ExpandPath">
                                    <Setter.Value>
                                        <RotateTransform Angle="90" CenterX="3" CenterY="3"/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="TreeItemContainerStyle" TargetType="{x:Type TreeViewItem}">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
            <Setter Property="FontWeight" Value="Normal" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TreeViewItem}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" MinWidth="19"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                                        Style="{StaticResource ExpandCollapseToggleStyle}"/>
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" 
                                    Grid.Column="1" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="1"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="true">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsExpanded" Value="false">
                                <Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasItems" Value="false">
                                <Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource BorderBrush}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsSelected" Value="true"/>
                                    <Condition Property="IsSelectionActive" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource BorderBrush}"/>
                                <Setter Property="Foreground" Value="White"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <HierarchicalDataTemplate x:Key="TreeItemTemplate" DataType="{x:Type viewModels:MusicTreeItem}" ItemsSource="{Binding Children}">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="{Binding Icon}" FontFamily="Segoe UI Symbol" Margin="0,0,5,0" />
                <TextBlock Text="{Binding Name}" />
            </StackPanel>
        </HierarchicalDataTemplate>
    </UserControl.Resources>
    <Grid x:Name="MusicTabContentGrid">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" MinWidth="150"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Navigation Side -->
        <Grid Grid.Column="0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Controls Row -->
            <DockPanel Grid.Row="0" LastChildFill="True" Margin="5">
                <Button x:Name="MusicTabRefreshButton" 
                        DockPanel.Dock="Left" 
                        Margin="0,0,5,0"
                        Click="RefreshButton_Click">
                    <TextBlock Text="⟳" FontSize="14"/>
                </Button>
                <TextBox x:Name="SearchBox" 
                         TextChanged="SearchBox_TextChanged"
                         DockPanel.Dock="Right">
                    <TextBox.Style>
                        <Style TargetType="TextBox">
                            <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
                            <Style.Triggers>
                                <Trigger Property="Text" Value="">
                                    <Setter Property="Background" Value="{DynamicResource WindowBackgroundBrush}"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>
            </DockPanel>

            <!-- Navigation Tree -->
            <TreeView x:Name="NavigationTree" 
                    Grid.Row="1" 
                    ItemsSource="{Binding RootItems}" 
                    ItemTemplate="{StaticResource TreeItemTemplate}" 
                    ItemContainerStyle="{StaticResource TreeItemContainerStyle}"
                    Background="{DynamicResource WindowBackgroundBrush}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    Foreground="{DynamicResource TextBrush}"
                    BorderThickness="0"
                    SelectedItemChanged="NavigationTree_SelectedItemChanged"
                    MouseRightButtonDown="NavigationTree_MouseRightButtonDown"
                    MouseDoubleClick="NavigationTree_MouseDoubleClick"
                    AllowDrop="True"
                    DragEnter="NavigationTree_DragEnter"
                    DragLeave="NavigationTree_DragLeave"
                    Drop="NavigationTree_Drop">
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type viewModels:MusicTreeItem}" ItemsSource="{Binding Children}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Width="16" Height="16" Margin="0,0,5,0" VerticalAlignment="Center">
                                <TextBlock.Style>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Type}" Value="Artist">
                                                <Setter Property="Text" Value="🎤"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="Album">
                                                <Setter Property="Text" Value="💿"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="Playlist">
                                                <Setter Property="Text" Value="📋"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Type}" Value="Category">
                                                <Setter Property="Text" Value="📁"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Text="{Binding Name}" />
                        </StackPanel>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
            </TreeView>
        </Grid>

        <!-- Splitter -->
        <GridSplitter Grid.Column="1" 
                      Width="5" 
                      HorizontalAlignment="Center"
                      VerticalAlignment="Stretch"
                      Background="{DynamicResource BorderBrush}"
                      DragCompleted="GridSplitter_DragCompleted"/>

        <!-- Content Area -->
        <Grid Grid.Column="2">
            <ListView x:Name="ContentListView_Control" 
                      ItemsSource="{Binding ContentItems}"
                      Background="{DynamicResource WindowBackgroundBrush}"
                      BorderBrush="{DynamicResource BorderBrush}"
                      Foreground="{DynamicResource TextBrush}"
                      SelectionMode="Extended"
                      BorderThickness="0"
                      SelectionChanged="ContentListView_SelectionChanged"
                      MouseRightButtonDown="ContentListView_MouseRightButtonDown"
                      MouseDoubleClick="ContentListView_MouseDoubleClick"
                      PreviewMouseLeftButtonDown="ContentListView_PreviewMouseLeftButtonDown"
                      PreviewMouseMove="ContentListView_PreviewMouseMove"
                      SizeChanged="ContentListView_Control_SizeChanged">
                <ListView.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Play" Click="PlayMenuItem_Click"/>
                        <MenuItem Header="Shuffle" Click="ShuffleMenuItem_Click"/>
                    </ContextMenu>
                </ListView.ContextMenu>
                <ListView.View>
                    <GridView>
                        <GridViewColumn x:Name="TrackNumberColumn" Header="#" Width="30">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding TrackNumber}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn x:Name="NameColumn" Header="Name" Width="200">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <!-- Item type icon -->
                                        <TextBlock Width="16" Height="16" Margin="0,0,5,0" VerticalAlignment="Center">
                                            <TextBlock.Style>
                                                <Style TargetType="TextBlock">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Type}" Value="Track">
                                                            <Setter Property="Text" Value="🎵"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="Album">
                                                            <Setter Property="Text" Value="💿"/>
                                                        </DataTrigger>
                                                        <DataTrigger Binding="{Binding Type}" Value="Playlist">
                                                            <Setter Property="Text" Value="📋"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        
                                        <!-- Play indicator -->
                                        <TextBlock Text="▶" 
                                                 Foreground="White" 
                                                 FontWeight="Bold" 
                                                 Margin="0,0,5,0"
                                                 Visibility="{Binding IsPlaying, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                                 
                                        <!-- Track name -->
                                        <TextBlock Text="{Binding Name}" />
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Artist" Width="200">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ArtistName}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn x:Name="AlbumColumn" Header="Album" Width="150">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Album}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn x:Name="DurationColumn" Header="Duration" Width="60">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Duration, StringFormat=mm\\:ss}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="Padding" Value="5" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsPlaying}" Value="True">
                                <Setter Property="Background" Value="{DynamicResource AccentBrush}" />
                                <Setter Property="Foreground" Value="White" />
                                <Setter Property="FontWeight" Value="Bold" />
                                <Setter Property="BorderThickness" Value="0,0,0,1" />
                                <Setter Property="BorderBrush" Value="{DynamicResource HighlightBrush}" />
                            </DataTrigger>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="{DynamicResource SelectionBackgroundBrush}" />
                                <Setter Property="Foreground" Value="{DynamicResource SelectionForegroundBrush}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </ListView.ItemContainerStyle>
            </ListView>
            
            <!-- Loading Overlay -->
            <Grid Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Rectangle Fill="{DynamicResource WindowBackgroundBrush}" Opacity="0.7"/>
                <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                    <TextBlock Text="Loading..." FontSize="18" Foreground="{DynamicResource TextBrush}" HorizontalAlignment="Center"/>
                    <ProgressBar IsIndeterminate="True" Width="200" Height="10" Margin="0,10,0,0"/>
                </StackPanel>
            </Grid>
            
            <!-- Error Message -->
            <Border Visibility="{Binding ErrorMessage, Converter={StaticResource StringToVisibilityConverter}}"
                    Background="#FFDDDD" BorderBrush="#FF5555" BorderThickness="1" Padding="10"
                    VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,10,0,0">
                <TextBlock Text="{Binding ErrorMessage}" Foreground="#DD0000" TextWrapping="Wrap"/>
            </Border>
        </Grid>
    </Grid>
</UserControl> 