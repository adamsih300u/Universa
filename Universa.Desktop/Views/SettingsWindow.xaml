<?xml version="1.0" encoding="utf-8"?>
<Window 
    x:Class="Universa.Desktop.Views.SettingsWindow"
    x:Name="SettingsWindowControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:Universa.Desktop.Views"
    xmlns:vm="clr-namespace:Universa.Desktop.ViewModels"
    xmlns:converters="clr-namespace:Universa.Desktop.Converters"
    mc:Ignorable="d"
    Title="Settings" 
    Height="600" 
    Width="800"
    WindowStartupLocation="CenterOwner"
    ResizeMode="CanResize"
    MinWidth="600" 
    MinHeight="400">

    <Window.Resources>
        <!-- Theme Resources -->
        <SolidColorBrush x:Key="ThemeBackground" Color="White"/>
        <SolidColorBrush x:Key="ThemeForeground" Color="Black"/>
        <SolidColorBrush x:Key="ThemeControlBackground" Color="#F5F5F5"/>
        <SolidColorBrush x:Key="ThemeControlForeground" Color="Black"/>
        <SolidColorBrush x:Key="ThemeBorderBrush" Color="#C8C8C8"/>

        <Style TargetType="GroupBox">
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{DynamicResource ThemeBackground}">
                            <DockPanel>
                                <Border DockPanel.Dock="Top" Margin="10,0,0,-5" Background="{DynamicResource ThemeBackground}">
                                    <TextBlock Foreground="{DynamicResource ThemeForeground}" Text="{TemplateBinding Header}" />
                                </Border>
                                <ContentPresenter Margin="{TemplateBinding Padding}" />
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{DynamicResource ThemeControlBackground}"
                                BorderBrush="{DynamicResource ThemeBorderBrush}"
                                BorderThickness="1"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource ThemeControlForeground}"/>
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" 
                                Background="{DynamicResource ThemeControlBackground}"
                                BorderBrush="{DynamicResource ThemeBorderBrush}"
                                BorderThickness="1,1,1,0"
                                Margin="0,0,2,0"
                                Padding="10,5">
                            <ContentPresenter x:Name="ContentSite"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            ContentSource="Header"
                                            RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ThemeBackground}"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ThemeControlBackground}"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}"/>
        </Style>
        <Style TargetType="TabControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel Grid.Row="0" 
                                     Panel.ZIndex="1" 
                                     Margin="0,0,4,-1" 
                                     IsItemsHost="True"
                                     Background="Transparent"/>
                            <Border Grid.Row="1"
                                    Background="{DynamicResource ThemeBackground}"
                                    BorderBrush="{DynamicResource ThemeBorderBrush}"
                                    BorderThickness="1">
                                <ContentPresenter ContentSource="SelectedContent"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="0,2"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Background" Value="{DynamicResource ThemeBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                            <ScrollViewer x:Name="PART_ContentHost"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="Margin" Value="0,2"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Background" Value="{DynamicResource ThemeBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                            <ScrollViewer x:Name="PART_ContentHost"
                                        Padding="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder"
                                    Width="16"
                                    Height="16"
                                    Background="{DynamicResource ThemeBackground}"
                                    BorderBrush="{DynamicResource ThemeBorderBrush}"
                                    BorderThickness="1">
                                <Path x:Name="checkMark"
                                      Data="M 3,8 L 7,12 L 13,4"
                                      Stroke="{DynamicResource ThemeForeground}"
                                      StrokeThickness="2"
                                      Visibility="Collapsed"/>
                            </Border>
                            <ContentPresenter Grid.Column="1"
                                            Margin="5,0,0,0"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="RadioButton">
            <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder"
                                    Width="16"
                                    Height="16"
                                    Background="{DynamicResource ThemeBackground}"
                                    BorderBrush="{DynamicResource ThemeBorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="8">
                                <Ellipse x:Name="radioMark"
                                         Width="8"
                                         Height="8"
                                         Fill="{DynamicResource ThemeForeground}"
                                         Visibility="Collapsed"/>
                            </Border>
                            <ContentPresenter Grid.Column="1"
                                            Margin="5,0,0,0"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="radioMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}"/>
        </Style>
        <Style TargetType="ScrollViewer">
            <Setter Property="Background" Value="{DynamicResource ThemeBackground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                     Grid.Column="1"
                                     Value="{TemplateBinding VerticalOffset}"
                                     Maximum="{TemplateBinding ScrollableHeight}"
                                     ViewportSize="{TemplateBinding ViewportHeight}"
                                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                     Orientation="Horizontal"
                                     Grid.Row="1"
                                     Grid.Column="0"
                                     Value="{TemplateBinding HorizontalOffset}"
                                     Maximum="{TemplateBinding ScrollableWidth}"
                                     ViewportSize="{TemplateBinding ViewportWidth}"
                                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:StringToBoolConverter x:Key="StringToBoolConverter"/>
    </Window.Resources>

    <DockPanel Background="{DynamicResource ThemeBackground}">
        <!-- Bottom buttons -->
        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right" Margin="10">
            <Button Content="Reset" Command="{Binding ResetCommand}" Margin="5,0" Padding="10,5"/>
            <Button Content="Cancel" Command="{Binding CancelCommand}" Margin="5,0" Padding="10,5"/>
            <Button Content="Save" Command="{Binding SaveCommand}" Margin="5,0" Padding="10,5"/>
        </StackPanel>

        <!-- Main content -->
        <TabControl x:Name="SettingsTabControl" Margin="10" TabStripPlacement="Top">
            <TabItem Header="General">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <GroupBox Header="Theme" Margin="0,0,0,10">
                            <StackPanel Margin="5">
                                <RadioButton Content="Light Theme" 
                                           IsChecked="{Binding CurrentTheme, Converter={StaticResource StringToBoolConverter}, ConverterParameter=Light}"
                                           Command="{Binding ThemeViewModel.SetLightThemeCommand}"
                                           Margin="0,5"/>
                                <RadioButton Content="Dark Theme" 
                                           IsChecked="{Binding CurrentTheme, Converter={StaticResource StringToBoolConverter}, ConverterParameter=Dark}"
                                           Command="{Binding ThemeViewModel.SetDarkThemeCommand}"
                                           Margin="0,5"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Library" Margin="0,0,0,10">
                            <Grid Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Library Path:" VerticalAlignment="Center"/>
                                <TextBox Text="{Binding LibraryPath, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Margin="5,0"/>
                                <Button Content="Browse" Command="{Binding BrowseLibraryCommand}" Grid.Column="2"/>
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Org-Mode">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <GroupBox Header="Global Agenda" Margin="0,0,0,10">
                            <StackPanel Margin="5">
                                <CheckBox Content="Enable Global Agenda" IsChecked="{Binding EnableGlobalAgenda}" Margin="0,5"/>
                                
                                <DockPanel Margin="0,5">
                                    <TextBlock Text="Days Ahead:" VerticalAlignment="Center"/>
                                    <TextBox Text="{Binding AgendaDaysAhead}" Margin="5,0" Width="60"/>
                                    <TextBlock Text="(Number of days to show in upcoming section)" 
                                              FontStyle="Italic" 
                                              Foreground="Gray" 
                                              Margin="5,0" 
                                              VerticalAlignment="Center"/>
                                </DockPanel>
                                
                                <DockPanel Margin="0,5">
                                    <TextBlock Text="Days Behind:" VerticalAlignment="Center"/>
                                    <TextBox Text="{Binding AgendaDaysBehind}" Margin="5,0" Width="60"/>
                                    <TextBlock Text="(Number of days back to show overdue items)" 
                                              FontStyle="Italic" 
                                              Foreground="Gray" 
                                              Margin="5,0" 
                                              VerticalAlignment="Center"/>
                                </DockPanel>
                            </StackPanel>
                        </GroupBox>
                        
                        <GroupBox Header="TODO Tags" Margin="0,0,0,10">
                            <StackPanel Margin="5">
                                <TextBlock Text="Quick Tags (for cycling with Ctrl+Shift+T):" Margin="0,0,0,5"/>
                                <ListBox x:Name="TodoTagsListBox" ItemsSource="{Binding TodoTags}" Height="100" Margin="0,0,0,5"/>
                                <StackPanel Orientation="Horizontal">
                                    <TextBox x:Name="NewTagTextBox" Width="120" Margin="0,0,5,0" KeyDown="NewTagTextBox_KeyDown"/>
                                    <Button Content="Add Tag" Click="AddTodoTag_Click" Margin="0,0,5,0"/>
                                    <Button Content="Remove Selected" Click="RemoveTodoTag_Click"/>
                                </StackPanel>
                                <CheckBox Content="Tag cycling replaces ALL tags (not just configured ones)" 
                                         IsChecked="{Binding TagCyclingReplacesAll}"
                                         Margin="0,10,0,0"
                                         ToolTip="When checked, cycling tags will replace any existing manual tags. When unchecked, manual tags are preserved and only configured tags are cycled."/>
                                <TextBlock Text="Press Ctrl+Shift+T in org-mode editor to cycle through these tags" 
                                          FontStyle="Italic" 
                                          Foreground="Gray" 
                                          Margin="0,5,0,0"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Agenda Files" Margin="0,0,0,10">
                            <StackPanel Margin="5">
                                <TextBlock Text="Specific Files:" Margin="0,0,0,5"/>
                                <ListBox x:Name="AgendaFilesListBox" 
                                         ItemsSource="{Binding OrgAgendaFiles}" 
                                         Height="100"
                                         Margin="0,0,0,5">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <DockPanel>
                                                <Button Content="Remove" 
                                                        Command="{Binding DataContext.RemoveAgendaFileCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                        CommandParameter="{Binding}"
                                                        DockPanel.Dock="Right"
                                                        Margin="5,0,0,0"
                                                        Padding="5,2"/>
                                                <TextBlock Text="{Binding}" VerticalAlignment="Center"/>
                                            </DockPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <Button Content="Add File..." Command="{Binding AddAgendaFileCommand}" Margin="0,5"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Agenda Directories" Margin="0,0,0,10">
                            <StackPanel Margin="5">
                                <TextBlock Text="Directories (scans all .org files):" Margin="0,0,0,5"/>
                                <ListBox x:Name="AgendaDirectoriesListBox" 
                                         ItemsSource="{Binding OrgAgendaDirectories}" 
                                         Height="100"
                                         Margin="0,0,0,5">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <DockPanel>
                                                <Button Content="Remove" 
                                                        Command="{Binding DataContext.RemoveAgendaDirectoryCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                        CommandParameter="{Binding}"
                                                        DockPanel.Dock="Right"
                                                        Margin="5,0,0,0"
                                                        Padding="5,2"/>
                                                <TextBlock Text="{Binding}" VerticalAlignment="Center"/>
                                            </DockPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <Button Content="Add Directory..." Command="{Binding AddAgendaDirectoryCommand}" Margin="0,5"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="TODO States" Margin="0,0,0,10">
                            <StackPanel Margin="5">
                                <TextBlock Text="Action Required States:" Margin="0,0,0,5" FontWeight="Bold"/>
                                <ListBox x:Name="TodoStatesListBox" 
                                         ItemsSource="{Binding OrgTodoStates}" 
                                         Height="80"
                                         Margin="0,0,0,5">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <DockPanel>
                                                <Button Content="Remove" 
                                                        Command="{Binding DataContext.RemoveTodoStateCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                        CommandParameter="{Binding}"
                                                        DockPanel.Dock="Right"
                                                        Margin="5,0,0,0"
                                                        Padding="5,2"/>
                                                <TextBlock Text="{Binding}" VerticalAlignment="Center" Foreground="#FF8C00"/>
                                            </DockPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <DockPanel Margin="0,5">
                                    <Button Content="Add" Command="{Binding AddTodoStateCommand}" DockPanel.Dock="Right" Margin="5,0,0,0"/>
                                    <TextBox x:Name="NewTodoStateTextBox" Text="{Binding NewTodoState, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="No-Action States" Margin="0,0,0,10">
                            <StackPanel Margin="5">
                                <TextBlock Text="States that don't require action:" Margin="0,0,0,5" FontWeight="Bold"/>
                                <ListBox x:Name="NoActionStatesListBox" 
                                         ItemsSource="{Binding OrgNoActionStates}" 
                                         Height="80"
                                         Margin="0,0,0,5">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <DockPanel>
                                                <Button Content="Remove" 
                                                        Command="{Binding DataContext.RemoveNoActionStateCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                        CommandParameter="{Binding}"
                                                        DockPanel.Dock="Right"
                                                        Margin="5,0,0,0"
                                                        Padding="5,2"/>
                                                <TextBlock Text="{Binding}" VerticalAlignment="Center" Foreground="#9370DB"/>
                                            </DockPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <DockPanel Margin="0,5">
                                    <Button Content="Add" Command="{Binding AddNoActionStateCommand}" DockPanel.Dock="Right" Margin="5,0,0,0"/>
                                    <TextBox x:Name="NewNoActionStateTextBox" Text="{Binding NewNoActionState, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Done States" Margin="0,0,0,10">
                            <StackPanel Margin="5">
                                <TextBlock Text="Completed states:" Margin="0,0,0,5" FontWeight="Bold"/>
                                <ListBox x:Name="DoneStatesListBox" 
                                         ItemsSource="{Binding OrgDoneStates}" 
                                         Height="80"
                                         Margin="0,0,0,5">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <DockPanel>
                                                <Button Content="Remove" 
                                                        Command="{Binding DataContext.RemoveDoneStateCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                        CommandParameter="{Binding}"
                                                        DockPanel.Dock="Right"
                                                        Margin="5,0,0,0"
                                                        Padding="5,2"/>
                                                <TextBlock Text="{Binding}" VerticalAlignment="Center" Foreground="#228B22"/>
                                            </DockPanel>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                                <DockPanel Margin="0,5">
                                    <Button Content="Add" Command="{Binding AddDoneStateCommand}" DockPanel.Dock="Right" Margin="5,0,0,0"/>
                                    <TextBox x:Name="NewDoneStateTextBox" Text="{Binding NewDoneState, UpdateSourceTrigger=PropertyChanged}"/>
                                </DockPanel>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="State Cycling" Margin="0,0,0,10">
                            <StackPanel Margin="5">
                                <TextBlock Text="When clicking a TODO button, states will cycle in this order:" 
                                          Margin="0,0,0,10" 
                                          TextWrapping="Wrap"/>
                                <TextBlock Text="Action Required → No Action → Done → Action Required..." 
                                          FontStyle="Italic" 
                                          Foreground="Gray"/>
                                <Button Content="Reset to Defaults" Command="{Binding ResetOrgStatesCommand}" Margin="0,10,0,0"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="TODO State Colors" Margin="0,0,0,10">
                            <StackPanel Margin="5">
                                <TextBlock Text="Customize the colors for each TODO state:" 
                                          Margin="0,0,0,10" 
                                          TextWrapping="Wrap"/>
                                <TextBlock Text="These colors will be shown in both the editor and Global Agenda." 
                                          FontStyle="Italic" 
                                          Foreground="Gray"
                                          Margin="0,0,0,10"/>
                                
                                <ScrollViewer MaxHeight="300" VerticalScrollBarVisibility="Auto">
                                    <ItemsControl ItemsSource="{Binding StateColorItems}">
                                        <ItemsControl.ItemTemplate>
                                            <DataTemplate>
                                                <Grid Margin="0,2">
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="100"/>
                                                        <ColumnDefinition Width="120"/>
                                                        <ColumnDefinition Width="120"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    
                                                    <!-- State Name -->
                                                    <TextBlock Text="{Binding StateName}" 
                                                              VerticalAlignment="Center"
                                                              FontWeight="Bold"
                                                              Grid.Column="0"/>
                                                    
                                                    <!-- Clickable Color Picker -->
                                                    <Button Grid.Column="1"
                                                           Width="80"
                                                           Height="25"
                                                           BorderBrush="Gray"
                                                           BorderThickness="1"
                                                           Margin="5,0"
                                                           Command="{Binding DataContext.OpenColorPickerCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                           CommandParameter="{Binding}"
                                                           ToolTip="Click to choose color">
                                                        <Button.Template>
                                                            <ControlTemplate TargetType="Button">
                                                                <Border Background="{Binding ColorBrush}"
                                                                       BorderBrush="{TemplateBinding BorderBrush}"
                                                                       BorderThickness="{TemplateBinding BorderThickness}"
                                                                       CornerRadius="3">
                                                                    <Border.Style>
                                                                        <Style TargetType="Border">
                                                                            <Style.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter Property="BorderBrush" Value="DarkGray"/>
                                                                                    <Setter Property="BorderThickness" Value="2"/>
                                                                                </Trigger>
                                                                            </Style.Triggers>
                                                                        </Style>
                                                                    </Border.Style>
                                                                    <!-- No text content - just show the color -->
                                                                </Border>
                                                            </ControlTemplate>
                                                        </Button.Template>
                                                    </Button>
                                                    
                                                    <!-- Hex Code Display (Read-only) -->
                                                    <TextBox Grid.Column="2"
                                                            Text="{Binding ColorHex, UpdateSourceTrigger=PropertyChanged}"
                                                            FontFamily="Consolas"
                                                            Margin="5,0"
                                                            ToolTip="Hex color code (editable)"/>
                                                    
                                                    <!-- Reset Button -->
                                                    <Button Grid.Column="3"
                                                           Content="Reset"
                                                           Command="{Binding DataContext.ResetStateColorCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                                           CommandParameter="{Binding StateName}"
                                                           Padding="5,2"
                                                           Margin="5,0"
                                                           ToolTip="Reset to default color"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ItemsControl.ItemTemplate>
                                    </ItemsControl>
                                </ScrollViewer>
                                
                                <Button Content="Reset All Colors to Defaults" 
                                       Command="{Binding ResetAllStateColorsCommand}" 
                                       Margin="0,10,0,0"
                                       HorizontalAlignment="Left"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Quick Refile Targets" Margin="0,0,0,10">
                            <StackPanel Margin="5">
                                <TextBlock Text="Configure quick refile targets for fast organization:" 
                                          Margin="0,0,0,10" 
                                          TextWrapping="Wrap"/>
                                <TextBlock Text="Format: 'name=file.org' or 'name=file.org::*Heading' (e.g., INBOX=inbox.org, PROJECTS=projects.org::*Projects)" 
                                          FontStyle="Italic" 
                                          Foreground="Gray"
                                          Margin="0,0,0,10"/>
                                
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <ListBox Grid.Column="0" 
                                             ItemsSource="{Binding OrgQuickRefileTargets}" 
                                             Height="120"
                                             SelectionMode="Single"
                                             x:Name="RefileTargetsListBox">
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="80"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Text="{Binding Key}" FontWeight="Bold" Grid.Column="0"/>
                                                    <TextBlock Text="{Binding Value}" Grid.Column="1" Margin="10,0,0,0"/>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                    </ListBox>
                                    
                                    <StackPanel Grid.Column="1" Margin="10,0,0,0">
                                        <Button Content="Add" Command="{Binding AddRefileTargetCommand}" Margin="0,2"/>
                                        <Button Content="Edit" Command="{Binding EditRefileTargetCommand}" Margin="0,2"/>
                                        <Button Content="Remove" Command="{Binding RemoveRefileTargetCommand}" Margin="0,2"/>
                                        <Button Content="Reset" Command="{Binding ResetRefileTargetsCommand}" Margin="0,2"/>
                                    </StackPanel>
                                </Grid>
                                
                                <TextBlock Text="💡 Tip: Access these targets with Ctrl+R when positioned on any heading" 
                                          FontSize="10" 
                                          FontStyle="Italic"
                                          Foreground="#4A90E2"
                                          Margin="0,10,0,0"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Keyboard Shortcuts" Margin="0,0,0,10">
                            <StackPanel Margin="5">
                                <TextBlock Text="Available keyboard shortcuts for Org-Mode editor:" 
                                          Margin="0,0,0,10" 
                                          FontWeight="Bold"/>
                                
                                <!-- Folding shortcuts -->
                                <TextBlock Text="📁 Folding / Outline Navigation:" 
                                          Margin="0,5,0,5" 
                                          FontWeight="SemiBold"
                                          Foreground="#4A90E2"/>
                                <Grid Margin="10,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Ctrl+Shift+[" FontFamily="Consolas" FontWeight="Bold"/>
                                    <TextBlock Text="Collapse all sections" Grid.Column="1"/>
                                </Grid>
                                <Grid Margin="10,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Ctrl+Shift+]" FontFamily="Consolas" FontWeight="Bold"/>
                                    <TextBlock Text="Expand all sections" Grid.Column="1"/>
                                </Grid>
                                <Grid Margin="10,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Ctrl+[" FontFamily="Consolas" FontWeight="Bold"/>
                                    <TextBlock Text="Collapse current section" Grid.Column="1"/>
                                </Grid>
                                <Grid Margin="10,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Ctrl+]" FontFamily="Consolas" FontWeight="Bold"/>
                                    <TextBlock Text="Expand current section" Grid.Column="1"/>
                                </Grid>
                                <Grid Margin="10,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Tab (on headers)" FontFamily="Consolas" FontWeight="Bold"/>
                                    <TextBlock Text="Toggle section folding" Grid.Column="1"/>
                                </Grid>

                                <!-- List shortcuts -->
                                <TextBlock Text="📝 List Management:" 
                                          Margin="0,15,0,5" 
                                          FontWeight="SemiBold"
                                          Foreground="#7B68EE"/>
                                <Grid Margin="10,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Tab (on lists)" FontFamily="Consolas" FontWeight="Bold"/>
                                    <TextBlock Text="Indent list item" Grid.Column="1"/>
                                </Grid>
                                <Grid Margin="10,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Shift+Tab (on lists)" FontFamily="Consolas" FontWeight="Bold"/>
                                    <TextBlock Text="Outdent list item" Grid.Column="1"/>
                                </Grid>
                                <Grid Margin="10,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Enter (on lists)" FontFamily="Consolas" FontWeight="Bold"/>
                                    <TextBlock Text="Create new list item" Grid.Column="1"/>
                                </Grid>
                                <Grid Margin="10,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Ctrl+Shift+C" FontFamily="Consolas" FontWeight="Bold"/>
                                    <TextBlock Text="Toggle checkbox: [ ] ↔ [X] ↔ [-]" Grid.Column="1"/>
                                </Grid>

                                <!-- TODO State Management -->
                                <TextBlock Text="📋 TODO State Management:" 
                                          Margin="0,15,0,5" 
                                          FontWeight="SemiBold"
                                          Foreground="#32CD32"/>
                                <Grid Margin="10,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Ctrl+Shift++" FontFamily="Consolas" FontWeight="Bold"/>
                                    <TextBlock Text="Cycle TODO state on current headline" Grid.Column="1"/>
                                </Grid>
                                <Grid Margin="10,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Ctrl+R / Ctrl+W" FontFamily="Consolas" FontWeight="Bold"/>
                                    <TextBlock Text="Refile current heading to another location" Grid.Column="1"/>
                                </Grid>
                                <Grid Margin="10,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Ctrl+Shift+T" FontFamily="Consolas" FontWeight="Bold"/>
                                    <TextBlock Text="Cycle through configured TODO tags" Grid.Column="1"/>
                                </Grid>

                                <!-- File shortcuts -->
                                <TextBlock Text="💾 File Operations:" 
                                          Margin="0,15,0,5" 
                                          FontWeight="SemiBold"
                                          Foreground="#FF6B6B"/>
                                <Grid Margin="10,0,0,5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="200"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Ctrl+S" FontFamily="Consolas" FontWeight="Bold"/>
                                    <TextBlock Text="Save file" Grid.Column="1"/>
                                </Grid>

                                <TextBlock Text="📚 Text Format Examples:" 
                                          Margin="0,15,0,5" 
                                          FontWeight="SemiBold"
                                          Foreground="#FF8C00"/>
                                <TextBlock Text="*bold*, /italic/, =code=, ~verbatim~, _underlined_, +strikethrough+" 
                                          Margin="10,0,0,5" 
                                          FontFamily="Consolas"
                                          FontStyle="Italic"
                                          Foreground="Gray"/>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Weather">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <CheckBox Content="Enable Weather" IsChecked="{Binding EnableWeather}"/>
                        <CheckBox Content="Enable Moon Phase" IsChecked="{Binding EnableMoonPhase}" Margin="0,5"/>
                        
                        <TextBlock Text="ZIP Code:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding WeatherZipCode, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="API Key:" Margin="0,10,0,5"/>
                        <PasswordBox x:Name="WeatherApiKeyBox" Margin="0,0,0,10"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="AI">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <GroupBox Header="OpenAI">
                            <StackPanel Margin="5">
                                <CheckBox Content="Enable OpenAI" IsChecked="{Binding EnableOpenAI}"/>
                                <TextBlock Text="API Key:" Margin="0,5"/>
                                <PasswordBox x:Name="OpenAIKeyBox"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Anthropic" Margin="0,10">
                            <StackPanel Margin="5">
                                <CheckBox Content="Enable Anthropic" IsChecked="{Binding EnableAnthropic}"/>
                                <TextBlock Text="API Key:" Margin="0,5"/>
                                <PasswordBox x:Name="AnthropicKeyBox"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="xAI" Margin="0,10">
                            <StackPanel Margin="5">
                                <CheckBox Content="Enable xAI" IsChecked="{Binding EnableXAI}"/>
                                <TextBlock Text="API Key:" Margin="0,5"/>
                                <PasswordBox x:Name="XAIKeyBox"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Ollama" Margin="0,10">
                            <StackPanel Margin="5">
                                <CheckBox Content="Enable Ollama" IsChecked="{Binding EnableOllama}"/>
                                <TextBlock Text="URL:" Margin="0,5"/>
                                <TextBox Text="{Binding OllamaUrl, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Model:" Margin="0,5"/>
                                <TextBox Text="{Binding OllamaModel, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="OpenRouter" Margin="0,10">
                            <StackPanel Margin="5">
                                <CheckBox Content="Enable OpenRouter" IsChecked="{Binding EnableOpenRouter}"/>
                                <TextBlock Text="API Key:" Margin="0,5"/>
                                <PasswordBox x:Name="OpenRouterKeyBox"/>
                                <TextBlock Text="Available Models:" Margin="0,10,0,5"/>
                                <Button Content="Fetch Available Models" Command="{Binding FetchOpenRouterModelsCommand}" Margin="0,5"/>
                                <ListBox x:Name="OpenRouterModelsListBox" 
                                         ItemsSource="{Binding AvailableOpenRouterModels}" 
                                         SelectionMode="Multiple"
                                         Height="150"
                                         Margin="0,5">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox Content="{Binding DisplayName}" 
                                                      IsChecked="{Binding IsSelected}" 
                                                      Tag="{Binding Name}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="AI Features" Margin="0,10">
                            <StackPanel Margin="5">
                                <!-- Remove the AI Characterization checkbox -->
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Sync">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <TextBlock Text="Server URL:" Margin="0,0,0,5"/>
                        <TextBox Text="{Binding SyncServerUrl, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Username:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding SyncUsername, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Password:" Margin="0,10,0,5"/>
                        <PasswordBox x:Name="SyncPasswordBox"/>

                        <CheckBox Content="Enable Auto Sync" IsChecked="{Binding AutoSync}" Margin="0,10"/>
                        
                        <DockPanel Margin="0,5">
                            <TextBlock Text="Sync Interval (minutes):" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding SyncIntervalMinutes}" Margin="5,0" Width="60"/>
                        </DockPanel>

                        <Button Content="Test Connection" Command="{Binding TestConnectionCommand}" Margin="0,10"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Matrix">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <TextBlock Text="Server URL:" Margin="0,0,0,5"/>
                        <TextBox Text="{Binding MatrixServerUrl, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Username:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding MatrixUsername, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Password:" Margin="0,10,0,5"/>
                        <PasswordBox x:Name="MatrixPasswordBox"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Subsonic">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <TextBlock Text="Friendly Name:" Margin="0,0,0,5"/>
                        <TextBox Text="{Binding SubsonicName, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Server URL:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding SubsonicUrl, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Username:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding SubsonicUsername, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Password:" Margin="0,10,0,5"/>
                        <PasswordBox x:Name="SubsonicPasswordBox"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Jellyfin">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <TextBlock Text="Friendly Name:" Margin="0,0,0,5"/>
                        <TextBox Text="{Binding JellyfinName, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Server URL:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding JellyfinUrl, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Username:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding JellyfinUsername, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Password:" Margin="0,10,0,5"/>
                        <PasswordBox x:Name="JellyfinPasswordBox"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Audiobookshelf">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <TextBlock Text="Friendly Name:" Margin="0,0,0,5"/>
                        <TextBox Text="{Binding AudiobookshelfName, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Server URL:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding AudiobookshelfUrl, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Username:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding AudiobookshelfUsername, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Password:" Margin="0,10,0,5"/>
                        <PasswordBox x:Name="AudiobookshelfPasswordBox"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window> 