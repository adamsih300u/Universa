<?xml version="1.0" encoding="utf-8"?>
<Window 
    x:Class="Universa.Desktop.Views.SettingsWindow"
    x:Name="SettingsWindowControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:Universa.Desktop.Views"
    xmlns:vm="clr-namespace:Universa.Desktop.ViewModels"
    xmlns:converters="clr-namespace:Universa.Desktop.Converters"
    mc:Ignorable="d"
    Title="Settings" 
    Height="600" 
    Width="800"
    WindowStartupLocation="CenterOwner"
    ResizeMode="CanResize"
    MinWidth="600" 
    MinHeight="400">

    <Window.Resources>
        <!-- Theme Resources -->
        <SolidColorBrush x:Key="ThemeBackground" Color="White"/>
        <SolidColorBrush x:Key="ThemeForeground" Color="Black"/>
        <SolidColorBrush x:Key="ThemeControlBackground" Color="#F5F5F5"/>
        <SolidColorBrush x:Key="ThemeControlForeground" Color="Black"/>
        <SolidColorBrush x:Key="ThemeBorderBrush" Color="#C8C8C8"/>

        <Style TargetType="GroupBox">
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderBrush}"/>
            <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{DynamicResource ThemeBackground}">
                            <DockPanel>
                                <Border DockPanel.Dock="Top" Margin="10,0,0,-5" Background="{DynamicResource ThemeBackground}">
                                    <TextBlock Foreground="{DynamicResource ThemeForeground}" Text="{TemplateBinding Header}" />
                                </Border>
                                <ContentPresenter Margin="{TemplateBinding Padding}" />
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Padding" Value="10,5"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{DynamicResource ThemeControlBackground}"
                                BorderBrush="{DynamicResource ThemeBorderBrush}"
                                BorderThickness="1"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource ThemeControlForeground}"/>
        </Style>
        <Style TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" 
                                Background="{DynamicResource ThemeControlBackground}"
                                BorderBrush="{DynamicResource ThemeBorderBrush}"
                                BorderThickness="1,1,1,0"
                                Margin="0,0,2,0"
                                Padding="10,5">
                            <ContentPresenter x:Name="ContentSite"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Center"
                                            ContentSource="Header"
                                            RecognizesAccessKey="True"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ThemeBackground}"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0"/>
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ThemeControlBackground}"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}"/>
        </Style>
        <Style TargetType="TabControl">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabControl">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel Grid.Row="0" 
                                     Panel.ZIndex="1" 
                                     Margin="0,0,4,-1" 
                                     IsItemsHost="True"
                                     Background="Transparent"/>
                            <Border Grid.Row="1"
                                    Background="{DynamicResource ThemeBackground}"
                                    BorderBrush="{DynamicResource ThemeBorderBrush}"
                                    BorderThickness="1">
                                <ContentPresenter ContentSource="SelectedContent"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Margin" Value="0,2"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Background" Value="{DynamicResource ThemeBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                            <ScrollViewer x:Name="PART_ContentHost"
                                        Padding="{TemplateBinding Padding}"
                                        Background="{TemplateBinding Background}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="PasswordBox">
            <Setter Property="Margin" Value="0,2"/>
            <Setter Property="Padding" Value="3"/>
            <Setter Property="Background" Value="{DynamicResource ThemeBackground}"/>
            <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="PasswordBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                            <ScrollViewer x:Name="PART_ContentHost"
                                        Padding="{TemplateBinding Padding}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="checkBoxBorder"
                                    Width="16"
                                    Height="16"
                                    Background="{DynamicResource ThemeBackground}"
                                    BorderBrush="{DynamicResource ThemeBorderBrush}"
                                    BorderThickness="1">
                                <Path x:Name="checkMark"
                                      Data="M 3,8 L 7,12 L 13,4"
                                      Stroke="{DynamicResource ThemeForeground}"
                                      StrokeThickness="2"
                                      Visibility="Collapsed"/>
                            </Border>
                            <ContentPresenter Grid.Column="1"
                                            Margin="5,0,0,0"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="RadioButton">
            <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RadioButton">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <Border x:Name="radioButtonBorder"
                                    Width="16"
                                    Height="16"
                                    Background="{DynamicResource ThemeBackground}"
                                    BorderBrush="{DynamicResource ThemeBorderBrush}"
                                    BorderThickness="1"
                                    CornerRadius="8">
                                <Ellipse x:Name="radioMark"
                                         Width="8"
                                         Height="8"
                                         Fill="{DynamicResource ThemeForeground}"
                                         Visibility="Collapsed"/>
                            </Border>
                            <ContentPresenter Grid.Column="1"
                                            Margin="5,0,0,0"
                                            VerticalAlignment="Center"
                                            HorizontalAlignment="Left"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="radioMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="Foreground" Value="{DynamicResource ThemeForeground}"/>
        </Style>
        <Style TargetType="ScrollViewer">
            <Setter Property="Background" Value="{DynamicResource ThemeBackground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ScrollViewer">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                     Grid.Column="1"
                                     Value="{TemplateBinding VerticalOffset}"
                                     Maximum="{TemplateBinding ScrollableHeight}"
                                     ViewportSize="{TemplateBinding ViewportHeight}"
                                     Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                     Orientation="Horizontal"
                                     Grid.Row="1"
                                     Grid.Column="0"
                                     Value="{TemplateBinding HorizontalOffset}"
                                     Maximum="{TemplateBinding ScrollableWidth}"
                                     ViewportSize="{TemplateBinding ViewportWidth}"
                                     Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:StringToBoolConverter x:Key="StringToBoolConverter"/>
    </Window.Resources>

    <DockPanel Background="{DynamicResource ThemeBackground}">
        <!-- Bottom buttons -->
        <StackPanel DockPanel.Dock="Bottom" Orientation="Horizontal" HorizontalAlignment="Right" Margin="10">
            <Button Content="Reset" Command="{Binding ResetCommand}" Margin="5,0" Padding="10,5"/>
            <Button Content="Cancel" Command="{Binding CancelCommand}" Margin="5,0" Padding="10,5"/>
            <Button Content="Save" Command="{Binding SaveCommand}" Margin="5,0" Padding="10,5"/>
        </StackPanel>

        <!-- Main content -->
        <TabControl x:Name="SettingsTabControl" Margin="10" TabStripPlacement="Top">
            <TabItem Header="General">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <GroupBox Header="Theme" Margin="0,0,0,10">
                            <StackPanel Margin="5">
                                <RadioButton Content="Light Theme" 
                                           IsChecked="{Binding CurrentTheme, Converter={StaticResource StringToBoolConverter}, ConverterParameter=Light}"
                                           Command="{Binding ThemeViewModel.SetLightThemeCommand}"
                                           Margin="0,5"/>
                                <RadioButton Content="Dark Theme" 
                                           IsChecked="{Binding CurrentTheme, Converter={StaticResource StringToBoolConverter}, ConverterParameter=Dark}"
                                           Command="{Binding ThemeViewModel.SetDarkThemeCommand}"
                                           Margin="0,5"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Library" Margin="0,0,0,10">
                            <Grid Margin="5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="Library Path:" VerticalAlignment="Center"/>
                                <TextBox Text="{Binding LibraryPath, UpdateSourceTrigger=PropertyChanged}" Grid.Column="1" Margin="5,0"/>
                                <Button Content="Browse" Command="{Binding BrowseLibraryCommand}" Grid.Column="2"/>
                            </Grid>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Weather">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <CheckBox Content="Enable Weather" IsChecked="{Binding EnableWeather}"/>
                        <CheckBox Content="Enable Moon Phase" IsChecked="{Binding EnableMoonPhase}" Margin="0,5"/>
                        
                        <TextBlock Text="ZIP Code:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding WeatherZipCode, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="API Key:" Margin="0,10,0,5"/>
                        <PasswordBox x:Name="WeatherApiKeyBox" Margin="0,0,0,10"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="AI">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <GroupBox Header="OpenAI">
                            <StackPanel Margin="5">
                                <CheckBox Content="Enable OpenAI" IsChecked="{Binding EnableOpenAI}"/>
                                <TextBlock Text="API Key:" Margin="0,5"/>
                                <PasswordBox x:Name="OpenAIKeyBox"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Anthropic" Margin="0,10">
                            <StackPanel Margin="5">
                                <CheckBox Content="Enable Anthropic" IsChecked="{Binding EnableAnthropic}"/>
                                <TextBlock Text="API Key:" Margin="0,5"/>
                                <PasswordBox x:Name="AnthropicKeyBox"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="xAI" Margin="0,10">
                            <StackPanel Margin="5">
                                <CheckBox Content="Enable xAI" IsChecked="{Binding EnableXAI}"/>
                                <TextBlock Text="API Key:" Margin="0,5"/>
                                <PasswordBox x:Name="XAIKeyBox"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="Ollama" Margin="0,10">
                            <StackPanel Margin="5">
                                <CheckBox Content="Enable Ollama" IsChecked="{Binding EnableOllama}"/>
                                <TextBlock Text="URL:" Margin="0,5"/>
                                <TextBox Text="{Binding OllamaUrl, UpdateSourceTrigger=PropertyChanged}"/>
                                <TextBlock Text="Model:" Margin="0,5"/>
                                <TextBox Text="{Binding OllamaModel, UpdateSourceTrigger=PropertyChanged}"/>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="OpenRouter" Margin="0,10">
                            <StackPanel Margin="5">
                                <CheckBox Content="Enable OpenRouter" IsChecked="{Binding EnableOpenRouter}"/>
                                <TextBlock Text="API Key:" Margin="0,5"/>
                                <PasswordBox x:Name="OpenRouterKeyBox"/>
                                <TextBlock Text="Available Models:" Margin="0,10,0,5"/>
                                <Button Content="Fetch Available Models" Command="{Binding FetchOpenRouterModelsCommand}" Margin="0,5"/>
                                <ListBox x:Name="OpenRouterModelsListBox" 
                                         ItemsSource="{Binding AvailableOpenRouterModels}" 
                                         SelectionMode="Multiple"
                                         Height="150"
                                         Margin="0,5">
                                    <ListBox.ItemTemplate>
                                        <DataTemplate>
                                            <CheckBox Content="{Binding DisplayName}" 
                                                      IsChecked="{Binding IsSelected}" 
                                                      Tag="{Binding Name}"/>
                                        </DataTemplate>
                                    </ListBox.ItemTemplate>
                                </ListBox>
                            </StackPanel>
                        </GroupBox>

                        <GroupBox Header="AI Features" Margin="0,10">
                            <StackPanel Margin="5">
                                <!-- Remove the AI Characterization checkbox -->
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Sync">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <TextBlock Text="Server URL:" Margin="0,0,0,5"/>
                        <TextBox Text="{Binding SyncServerUrl, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Username:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding SyncUsername, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Password:" Margin="0,10,0,5"/>
                        <PasswordBox x:Name="SyncPasswordBox"/>

                        <CheckBox Content="Enable Auto Sync" IsChecked="{Binding AutoSync}" Margin="0,10"/>
                        
                        <DockPanel Margin="0,5">
                            <TextBlock Text="Sync Interval (minutes):" VerticalAlignment="Center"/>
                            <TextBox Text="{Binding SyncIntervalMinutes}" Margin="5,0" Width="60"/>
                        </DockPanel>

                        <Button Content="Test Connection" Command="{Binding TestConnectionCommand}" Margin="0,10"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Matrix">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <TextBlock Text="Server URL:" Margin="0,0,0,5"/>
                        <TextBox Text="{Binding MatrixServerUrl, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Username:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding MatrixUsername, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Password:" Margin="0,10,0,5"/>
                        <PasswordBox x:Name="MatrixPasswordBox"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Subsonic">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <TextBlock Text="Friendly Name:" Margin="0,0,0,5"/>
                        <TextBox Text="{Binding SubsonicName, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Server URL:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding SubsonicUrl, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Username:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding SubsonicUsername, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Password:" Margin="0,10,0,5"/>
                        <PasswordBox x:Name="SubsonicPasswordBox"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Jellyfin">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <TextBlock Text="Friendly Name:" Margin="0,0,0,5"/>
                        <TextBox Text="{Binding JellyfinName, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Server URL:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding JellyfinUrl, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Username:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding JellyfinUsername, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Password:" Margin="0,10,0,5"/>
                        <PasswordBox x:Name="JellyfinPasswordBox"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>

            <TabItem Header="Audiobookshelf">
                <ScrollViewer>
                    <StackPanel Margin="10">
                        <TextBlock Text="Friendly Name:" Margin="0,0,0,5"/>
                        <TextBox Text="{Binding AudiobookshelfName, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Server URL:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding AudiobookshelfUrl, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Username:" Margin="0,10,0,5"/>
                        <TextBox Text="{Binding AudiobookshelfUsername, UpdateSourceTrigger=PropertyChanged}"/>
                        
                        <TextBlock Text="Password:" Margin="0,10,0,5"/>
                        <PasswordBox x:Name="AudiobookshelfPasswordBox"/>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
        </TabControl>
    </DockPanel>
</Window> 