<?xml version="1.0" encoding="utf-8" ?>
<UserControl x:Class="Universa.Desktop.Tabs.ToDoTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Universa.Desktop.Tabs"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             xmlns:converters="clr-namespace:Universa.Desktop.Converters"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <local:BoolToAngleConverter x:Key="BoolToAngleConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        
        <!-- Checkbox Style -->
        <Style x:Key="CustomCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid>
                            <Border x:Name="border" 
                                    BorderThickness="2" 
                                    BorderBrush="#FF007ACC" 
                                    Background="White" 
                                    CornerRadius="3" 
                                    Width="20" 
                                    Height="20">
                                <Path x:Name="checkMark" 
                                      Data="M 0,8 L 3,11 L 8,6" 
                                      Stroke="#FF007ACC" 
                                      StrokeThickness="2" 
                                      Visibility="Collapsed"/>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="checkMark" Property="Visibility" Value="Visible"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="#FF1E97FF"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Search Box Style -->
        <Style x:Key="SearchBoxStyle" TargetType="TextBox">
            <Setter Property="Padding" Value="8,4"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="BorderBrush" Value="#FFABADB3"/>
            <Setter Property="Background" Value="White"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TextBox">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Path Data="M0,0 L4,4 L8,0" 
                                      Stroke="#FFABADB3" 
                                      StrokeThickness="1" 
                                      Width="8" 
                                      Height="8" 
                                      Margin="8,0,0,0" 
                                      VerticalAlignment="Center"/>
                                <ScrollViewer x:Name="PART_ContentHost" 
                                            Grid.Column="1" 
                                            Margin="8,0"/>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Add ToDo Button Style -->
        <Style x:Key="AddToDoButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#FF007ACC"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Padding" Value="12,6"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="4">
                            <ContentPresenter HorizontalAlignment="Center" 
                                            VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#FF1E97FF"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Expand Button Style -->
        <Style x:Key="ExpandButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Path Data="M0,0 L4,4 L8,0" 
                                  Stroke="#FF007ACC" 
                                  StrokeThickness="1" 
                                  Width="8" 
                                  Height="8">
                                <Path.RenderTransform>
                                    <RotateTransform x:Name="arrowRotation" Angle="0"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                    <Setter Property="Path.RenderTransform">
                        <Setter.Value>
                            <RotateTransform Angle="180"/>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Delete Button Style -->
        <Style x:Key="DeleteButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Path Data="M0,0 L4,4 M4,0 L0,4" 
                                  Stroke="#FFE51400" 
                                  StrokeThickness="1" 
                                  Width="8" 
                                  Height="8"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1FE51400"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <Grid Grid.Row="0" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- Search box -->
            <TextBox x:Name="SearchBox" 
                     Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                     TextChanged="SearchBox_TextChanged"
                     Style="{StaticResource SearchBoxStyle}"
                     Margin="0,0,0,10"/>

            <!-- Right side controls -->
            <StackPanel Grid.Column="1" 
                        Orientation="Horizontal" 
                        HorizontalAlignment="Right">
                <CheckBox Content="Show Completed" 
                         IsChecked="{Binding ShowCompletedItems, UpdateSourceTrigger=PropertyChanged}"
                         Margin="0,0,10,0"/>
                <Button Content="Add ToDo" 
                        Click="AddToDo_Click"
                        Style="{StaticResource AddToDoButtonStyle}"/>
            </StackPanel>
        </Grid>

        <!-- ToDo List -->
        <ListView Grid.Row="1" 
                  ItemsSource="{Binding Todos}"
                  Background="Transparent"
                  BorderThickness="0"
                  HorizontalContentAlignment="Stretch"
                  Margin="10">
            <ListView.ItemContainerStyle>
                <Style TargetType="ListViewItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    <Setter Property="Padding" Value="5" />
                    <Setter Property="Margin" Value="0,2" />
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="BorderThickness" Value="0,0,0,1" />
                    <Setter Property="BorderBrush" Value="#FFDDDDDD" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- Checkbox -->
                        <CheckBox IsChecked="{Binding IsCompleted, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                 Checked="ToDo_CheckedChanged"
                                 Unchecked="ToDo_CheckedChanged"
                                 Style="{StaticResource CustomCheckBoxStyle}"
                                 Margin="0,0,10,0"
                                 VerticalAlignment="Center"/>

                        <!-- Content -->
                        <Grid Grid.Column="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                                <!-- Title, Dates, and Buttons -->
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                
                                <!-- Title with double-click behavior -->
                                <TextBlock Text="{Binding Title}"
                                         FontWeight="Bold"
                                         TextWrapping="Wrap"
                                         Foreground="#FF333333"
                                         MouseLeftButtonDown="ToDo_Title_MouseDoubleClick"/>
                                
                                <!-- Due Date Display -->
                                <TextBlock Grid.Column="1" 
                                          Text="{Binding DueDate, StringFormat=Due: {0:MM/dd/yyyy}}"
                                          Visibility="{Binding DueDate, Converter={StaticResource NullToVisibilityConverter}}"
                                          Margin="5,0,10,0" 
                                          VerticalAlignment="Center" 
                                          Foreground="#FF666666"/>
                                
                                <!-- Delete Button -->
                                <Button Grid.Column="2"
                                        Click="DeleteToDo_Click"
                                        Style="{StaticResource DeleteButtonStyle}"
                                        Margin="0,0,5,0"
                                        ToolTip="Delete this ToDo"/>
                                
                                <!-- Expand Button -->
                                <Button x:Name="ExpandButton"
                                        Grid.Column="3"
                                        Click="ExpandButton_Click"
                                        Style="{StaticResource ExpandButtonStyle}"/>
                            </Grid>

                                <!-- Basic ToDo Info -->
                            <Grid Grid.Row="1" Margin="0,5,0,0">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <!-- Description -->
                                <TextBlock Text="{Binding Description}" 
                                         TextWrapping="Wrap"
                                         Foreground="#FF666666"
                                         Visibility="{Binding Description, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                
                                <!-- Dates and Category -->
                                <Grid Grid.Row="1" Margin="0,5,0,0" Visibility="{Binding IsExpanded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    
                                    <TextBlock Grid.Column="0" Text="Start Date:" Margin="0,0,5,0" VerticalAlignment="Center"/>
                                    <DatePicker Grid.Column="1" SelectedDate="{Binding StartDate, Mode=TwoWay}" Margin="0,0,10,0"/>
                                    
                                    <TextBlock Grid.Column="2" Text="Due Date:" Margin="0,0,5,0" VerticalAlignment="Center"/>
                                    <DatePicker Grid.Column="3" SelectedDate="{Binding DueDate, Mode=TwoWay}" Margin="0,0,10,0"/>
                                    
                                    <TextBlock Grid.Column="4" Text="Category:" Margin="0,0,5,0" VerticalAlignment="Center"/>
                                    <TextBox Grid.Column="5" Text="{Binding Category, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                           MinWidth="100" Margin="0,0,0,0"/>
                                </Grid>
                                
                                <!-- Notes -->
                                <Grid Grid.Row="2" Margin="0,5,0,0" Visibility="{Binding IsExpanded, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    
                                    <TextBlock Text="Notes:" Margin="0,0,0,5"/>
                                    <TextBox Grid.Row="1" Text="{Binding Notes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                           TextWrapping="Wrap"
                                           AcceptsReturn="True"
                                           MinHeight="60"
                                           Margin="0,0,0,10"/>
                                </Grid>

                                <!-- SubTasks -->
                                <ItemsControl Grid.Row="1" 
                                            ItemsSource="{Binding SubTasks}"
                                            Margin="20,5,0,0">
                                    <ItemsControl.Style>
                                        <Style TargetType="ItemsControl">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding SubTasks.Count}" Value="0">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ItemsControl.Style>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Grid Margin="0,2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="Auto"/>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>

                                                <CheckBox IsChecked="{Binding IsCompleted, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                                         Checked="ToDo_CheckedChanged"
                                                         Unchecked="ToDo_CheckedChanged"
                                                         Style="{StaticResource CustomCheckBoxStyle}"
                                                         Margin="0,0,10,0"/>

                                                <TextBlock Grid.Column="1" 
                                                         Text="{Binding Title}"
                                                         TextWrapping="Wrap"
                                                         VerticalAlignment="Center"/>

                                                <Button Grid.Column="2"
                                                        Click="DeleteSubTask_Click"
                                                        Style="{StaticResource DeleteButtonStyle}"/>
                                            </Grid>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Grid>
                        </Grid>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>
</UserControl>
