<UserControl x:Class="Universa.Desktop.MediaTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:Universa.Desktop.Controls"
             xmlns:local="clr-namespace:Universa.Desktop"
             xmlns:models="clr-namespace:Universa.Desktop.Models"
             xmlns:viewModels="clr-namespace:Universa.Desktop.ViewModels"
             xmlns:converters="clr-namespace:Universa.Desktop.Converters"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             mc:Ignorable="d">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <converters:NullToVisibilityConverter x:Key="NullToVisibilityConverter"/>
        <converters:MediaTypeToIconConverter x:Key="MediaTypeToIconConverter"/>
        <converters:DurationConverter x:Key="DurationConverter"/>
        <converters:MediaTypeToEpisodeVisibilityConverter x:Key="MediaTypeToEpisodeVisibilityConverter"/>
        
        <!-- Style for TreeViewItems -->
        <Style x:Key="MediaTreeViewItemStyle" TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="False"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <EventSetter Event="MouseDoubleClick" Handler="TreeViewItem_MouseDoubleClick"/>
        </Style>
        
        <!-- PERFORMANCE: Themed DataGrid Row Style -->
        <Style x:Key="OptimizedDataGridRowStyle" TargetType="DataGridRow">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        </Style>
        
        <!-- Themed DataGrid Cell Style -->
        <Style x:Key="ThemedDataGridCellStyle" TargetType="DataGridCell">
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="{DynamicResource HighlightBrush}"/>
                    <Setter Property="Foreground" Value="{DynamicResource HighlightTextBrush}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        
        <!-- Themed DataGrid Column Header Style -->
        <Style x:Key="ThemedDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="0,0,1,1"/>
            <Setter Property="Padding" Value="8,4"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="250" MinWidth="200"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Navigation Tree -->
        <TreeView x:Name="MediaTabNavigationTree"
                  Grid.Column="0"
                  ItemsSource="{Binding NavigationItems}"
                  SelectedItemChanged="MediaTabNavigationTree_SelectedItemChanged"
                  VirtualizingPanel.IsVirtualizing="True"
                  VirtualizingPanel.VirtualizationMode="Recycling"
                  VirtualizingPanel.ScrollUnit="Item"
                  ScrollViewer.IsDeferredScrollingEnabled="True"
                  ScrollViewer.CanContentScroll="True">
            <TreeView.Template>
                <ControlTemplate TargetType="TreeView">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <!-- Buttons Panel -->
                        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" Margin="5">
                            <!-- Diagnostic Button -->
                            <Button Command="{Binding DiagnoseCommand}"
                                    Margin="0,0,5,0"
                                    Padding="8,4"
                                    ToolTip="Run Continue Watching Diagnostics">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="🔧" Margin="0,0,3,0"/>
                                    <TextBlock Text="Debug"/>
                                </StackPanel>
                            </Button>
                            
                            <!-- Refresh Button -->
                            <Button Command="{Binding RefreshCommand}"
                                    Padding="8,4">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock Text="Refresh" Margin="0,0,5,0"/>
                                    <Path Data="M4.5,1.5C5.6,1.5 6.6,1.9 7.4,2.5L8,2L8,5L5,5L6.2,3.8C5.6,3.3 5.1,3 4.5,3C3.1,3 2,4.1 2,5.5C2,6.9 3.1,8 4.5,8C5.3,8 6,7.7 6.5,7.1L7.7,8.3C6.9,9.2 5.8,9.5 4.5,9.5C2.3,9.5 0.5,7.7 0.5,5.5C0.5,3.3 2.3,1.5 4.5,1.5Z" 
                                          Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=Button}}"
                                          Width="12" Height="12" 
                                          Stretch="Uniform"/>
                                </StackPanel>
                            </Button>
                        </StackPanel>
                        
                        <!-- TreeView Items -->
                        <ScrollViewer Grid.Row="1" 
                                    CanContentScroll="True"
                                    Focusable="False">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
            </TreeView.Template>
            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate ItemsSource="{Binding Children}">
                    <StackPanel Orientation="Horizontal">
                        <!-- Different icons for different types -->
                        <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock">
                                    <Setter Property="Text" Value="📁"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Type}" Value="SpecialCollection">
                                            <Setter Property="Text" Value="⭐"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Name}" Value="Continue Watching">
                                            <Setter Property="Text" Value="▶️"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Name}" Value="Next Up">
                                            <Setter Property="Text" Value="⏭️"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Name}" Value="Latest Movies">
                                            <Setter Property="Text" Value="🎬"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Name}" Value="Latest TV">
                                            <Setter Property="Text" Value="📺"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="MovieLibrary">
                                            <Setter Property="Text" Value="🎭"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Type}" Value="TVLibrary">
                                            <Setter Property="Text" Value="📻"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text="{Binding Name}" VerticalAlignment="Center" Foreground="{DynamicResource TextBrush}"/>
                    </StackPanel>
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>
            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem" BasedOn="{StaticResource MediaTreeViewItemStyle}"/>
            </TreeView.ItemContainerStyle>
        </TreeView>

        <!-- Splitter -->
        <GridSplitter Grid.Column="1"
                      Width="5"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Stretch"/>

        <!-- Content Area -->
        <Grid Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <!-- Filter Box -->
            <TextBox x:Name="FilterTextBox" 
                     Grid.Row="0"
                     Margin="5"
                     Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.Style>
                    <Style TargetType="TextBox">
                        <Style.Resources>
                            <VisualBrush x:Key="WatermarkBrush" TileMode="None" Opacity="0.5" Stretch="None" AlignmentX="Left">
                                <VisualBrush.Visual>
                                    <TextBlock Text="Filter items..." Foreground="{DynamicResource TextBrush}"/>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Style.Resources>
                        <Style.Triggers>
                            <Trigger Property="Text" Value="">
                                <Setter Property="Background" Value="{StaticResource WatermarkBrush}"/>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <!-- Load More Button -->
            <Button Grid.Row="1" 
                    Margin="5"
                    Padding="8,4"
                    HorizontalAlignment="Center"
                    Command="{Binding LoadMoreCommand}"
                    Visibility="{Binding CanLoadMore, Converter={StaticResource BooleanToVisibilityConverter}}">
                <TextBlock Text="Load More Items"/>
            </Button>

            <!-- PERFORMANCE IMPROVEMENT: Replace ListView with DataGrid for better virtualization -->
            <DataGrid x:Name="MediaTabContentDataGrid"
                      Grid.Row="2"
                      ItemsSource="{Binding ContentItems}"
                      MouseDoubleClick="MediaTabContentListView_MouseDoubleClick"
                      SelectionChanged="MediaTabContentListView_SelectionChanged"
                      AutoGenerateColumns="False"
                      CanUserAddRows="False"
                      CanUserDeleteRows="False"
                      CanUserReorderColumns="True"
                      CanUserResizeColumns="True"
                      CanUserSortColumns="True"
                      HeadersVisibility="Column"
                      GridLinesVisibility="None"
                      RowStyle="{StaticResource OptimizedDataGridRowStyle}"
                      CellStyle="{StaticResource ThemedDataGridCellStyle}"
                      ColumnHeaderStyle="{StaticResource ThemedDataGridColumnHeaderStyle}"
                      Background="{DynamicResource BackgroundBrush}"
                      Foreground="{DynamicResource TextBrush}"
                      EnableRowVirtualization="True"
                      EnableColumnVirtualization="True"
                      VirtualizingPanel.IsVirtualizing="True"
                      VirtualizingPanel.VirtualizationMode="Recycling"
                      VirtualizingPanel.ScrollUnit="Item"
                      ScrollViewer.IsDeferredScrollingEnabled="True"
                      ScrollViewer.CanContentScroll="True">
                
                <DataGrid.Columns>
                    <!-- Episode Column - Themed -->
                    <DataGridTextColumn Header="Episode" 
                                        Width="70" 
                                        Binding="{Binding EpisodeNumber}"
                                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    
                    <!-- Series Column - Themed -->
                    <DataGridTextColumn Header="Series" 
                                        Width="200" 
                                        Binding="{Binding SeriesName}"
                                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                <Setter Property="ToolTip" Value="{Binding SeriesName}"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    
                    <!-- Name Column - Themed -->
                    <DataGridTextColumn Header="Episode Title" 
                                        Width="300" 
                                        Binding="{Binding Name}"
                                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                                <Setter Property="ToolTip" Value="{Binding Name}"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    
                    <!-- Type Column - Themed -->
                    <DataGridTextColumn Header="Type" 
                                        Width="100" 
                                        Binding="{Binding Type}"
                                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                    
                    <!-- Duration Column - Themed -->
                    <DataGridTextColumn Header="Duration" 
                                        Width="100" 
                                        Binding="{Binding Duration, Converter={StaticResource DurationConverter}}"
                                        IsReadOnly="True">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                <Setter Property="HorizontalAlignment" Value="Center"/>
                            </Style>
                        </DataGridTextColumn.ElementStyle>
                    </DataGridTextColumn>
                </DataGrid.Columns>
                
                <!-- Loading State -->
                <DataGrid.Style>
                    <Style TargetType="DataGrid">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentLoadingState}" Value="LoadingContent">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </DataGrid.Style>
            </DataGrid>

            <!-- Loading Indicator -->
            <Grid Grid.Row="2" Panel.ZIndex="1">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Rectangle Fill="{DynamicResource BackgroundBrush}" Opacity="0.7"/>
                <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                    <ProgressBar Width="200" Height="20" IsIndeterminate="True"/>
                    <TextBlock Text="Loading content..." 
                               Margin="0,10,0,0" 
                               HorizontalAlignment="Center"
                               Foreground="{DynamicResource TextBrush}"/>
                </StackPanel>
            </Grid>

            <!-- Error Message -->
            <Border Grid.Row="2" 
                    BorderThickness="1"
                    Padding="10"
                    Margin="5"
                    Panel.ZIndex="2">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                        <Setter Property="BorderBrush" Value="Red"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding CurrentLoadingState}" Value="Error">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <TextBlock Text="{Binding ErrorMessage}"
                           Foreground="Red"
                           TextWrapping="Wrap"/>
            </Border>
        </Grid>
    </Grid>
</UserControl> 